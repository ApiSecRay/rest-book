<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<book xmlns:xi="http://www.w3.org/2001/XInclude" xmlns="http://docbook.org/ns/docbook" version="5.0" xml:lang="en-US">
  <info>
    <title>REST API Development By Example</title>
    <subtitle>A complete guide to building usable, scalable, and secure RESTful systems</subtitle>
    <author>
      <personname>
        <firstname>Remon</firstname>
        <surname>Sinnema</surname>
      </personname>
    </author>
    <copyright>
      <year>2016</year>
    </copyright>
    <cover>
      <mediaobject>
        <imageobject>
          <imagedata fileref="images/sloth.png" scale="100" align="center"/>
        </imageobject>
      </mediaobject>
    </cover>
  </info>

  <part>
    <title>Getting Started</title>
    <partintro>
      <para>
        The first part of the book establishes what REST APIs are and why we need them
        (<xref linkend="introduction"/>) and how to capture requirements placed upon them
        (<xref linkend="analysis"/>).
      </para>
      <para>
        This mostly theoretical part lays the foundation for the more practical parts that follow.
      </para>
    </partintro>
        
    <xi:include href="introduction.xml"/>
    <xi:include href="analysis.xml"/>
  </part>

  <part>
    <title>Designing REST APIs</title>
    <partintro>
      <para>
        This part of the book talks about all the different aspects of designing a REST API. We explain in detail how to
        design a REST API (<xref linkend="design"/>), including using common design constructs
        (<xref linkend="patterns"/>), handling exceptional cases (<xref linkend="error"/>), and designing for good
        performance (<xref linkend="performance"/>) and security (<xref linkend="security"/>).
      </para>
      <para>
        In recent years the term REST has come to be synonymous to HTTP-based API. In the final chapter of this part of the book
        we look at some alternative protocols and why one would want to use them rather than HTTP.
      </para>
    </partintro>
    
    <xi:include href="design-methodology.xml"/>
    <xi:include href="design-patterns.xml"/>
    <xi:include href="error-handling.xml"/>
    <xi:include href="performance.xml"/>
    <xi:include href="security.xml"/>
    <xi:include href="beyond-http.xml"/>
  </part>

  <part>
    <title>Implementing REST APIs</title>
    <partintro>
      <para>
        This part of the book explains how to turn an API design into a fully functional implementation
        (<xref linkend="implementation"/>) that meets expectations (<xref linkend="test"/>). We'll also look at running
        the implementation (<xref linkend="operations"/>) and changing it over time (<xref linkend="maintenance"/>).
      </para>
    </partintro>
    
    <xi:include href="implementation.xml"/>
    <xi:include href="test.xml"/>
    <xi:include href="operations.xml"/>
    <xi:include href="maintenance.xml"/>
  </part>

  <part>
    <title>Using REST APIs</title>
    <partintro>
      <para>
        We saw in <xref linkend="implementation"/> that a server may be a client to another server. In order to fully
        understand how to build a REST server, we should know how to build a REST client. 
        In this final part of the book we thus come full circle by switching the perspective back from the server to the
        client and from building an API to consuming it (<xref linkend="client"/>).
      </para>
    </partintro>
    
    <xi:include href="client.xml"/>
  </part>  

  <xi:include href="bib.xml"/>>
</book>
